---
Debugger:
  DebugThreshold: info
  TestMode: '0'
Description: Ticket Connector REST
FrameworkVersion: 6.0.13
Provider:
  Operation:
    SessionCreate:
      Description: Creates a new Session by providing UserLogin or CustomerUserLogin and Password
      MappingInbound: {}
      MappingOutbound: {}
      Type: Session::SessionCreate
    SessionGet:
      Description: Check and validate a Session ID
      MappingInbound: {}
      MappingOutbound: {}
      Type: Session::SessionGet
    TicketCreate:
      Description: Creates a Ticket
      MappingInbound: {}
      MappingOutbound: {}
      Type: Ticket::TicketCreate
    TicketGet:
      Description: Retrieves Ticket data
      MappingInbound: {}
      MappingOutbound: {}
      Type: Ticket::TicketGet
    TicketGetList:
      Description: Retrieves Ticket data for a List of Ticket IDs
      MappingInbound: {}
      MappingOutbound: {}
      Type: Ticket::TicketGet
    TicketHistoryGet:
      Description: Retrieves Ticket history
      IncludeTicketData: '0'
      Type: Ticket::TicketHistoryGet
    TicketSearch:
      Description: Search for Tickets
      MappingInbound: {}
      MappingOutbound: {}
      Type: Ticket::TicketSearch
    TicketUpdate:
      Description: Updates a Ticket
      MappingInbound: {}
      MappingOutbound: {}
      Type: Ticket::TicketUpdate
  Transport:
    Config:
      KeepAlive: ''
      MaxLength: '100000000'
      RouteOperationMapping:
        SessionCreate:
          RequestMethod:
          - POST
          Route: /Session
        SessionGet:
          RequestMethod:
          - GET
          Route: /Session/:SessionID
        TicketCreate:
          RequestMethod:
          - POST
          Route: /Ticket
        TicketGet:
          RequestMethod:
          - GET
          Route: /Ticket/:TicketID
        TicketGetList:
          RequestMethod:
          - GET
          Route: /TicketList
        TicketHistoryGet:
          ParserBackend: JSON
          RequestMethod:
          - GET
          Route: /TicketHistory/:TicketID
        TicketSearch:
          RequestMethod:
          - GET
          Route: /Ticket
        TicketUpdate:
          RequestMethod:
          - PATCH
          Route: /Ticket/:TicketID
    Type: HTTP::REST
RemoteSystem: ''
Requester:
  Transport:
    Type: ''
